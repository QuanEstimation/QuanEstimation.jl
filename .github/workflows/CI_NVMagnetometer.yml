name: CI (NVMagnetometer)
on:
  pull_request:
      branches:
        - main
      paths:
        - "src/NVMagnetometer/**"
        - ".github/workflows/CI_NVMagnetometer.yml"
  push:
    branches:
      - main

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "lts"
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Install Dependencies and Run Tests"
        run: |
          import Pkg
          Pkg.Registry.update()
          # Install packages present in subdirectories
          dev_pks = Pkg.PackageSpec[]
          for path in ("src/QuanEstimationBase",)
              push!(dev_pks, Pkg.PackageSpec(; path))
          end
          Pkg.develop(dev_pks)
          Pkg.instantiate()
          Pkg.test(; coverage="user")
        shell: julia --color=yes --code-coverage=user --depwarn=yes --project=src/NVMagnetometer {0}
      - uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src/NVMagnetometer
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          fail_ci_if_error: false